import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { format, parseISO } from "date-fns";
import { TablePagination } from "./TablePagination";
export const PharmacyOrdersList = ({ items, onNextPage, onPrevPage, onClick, totalCount, }) => {
    return (_jsx("div", Object.assign({ className: "flex flex-col mt-4" }, { children: _jsx("div", Object.assign({ className: "-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8" }, { children: _jsx("div", Object.assign({ className: "py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8" }, { children: _jsxs("div", Object.assign({ className: "shadow overflow-hidden border-b border-gray-200 sm:rounded-lg" }, { children: [_jsxs("table", Object.assign({ className: "min-w-full divide-y divide-gray-200" }, { children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", Object.assign({ scope: "col", className: "px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" }, { children: "Patient" }), void 0),
                                            _jsx("th", Object.assign({ scope: "col", className: "px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" }, { children: "Phone" }), void 0),
                                            _jsx("th", Object.assign({ scope: "col", className: "px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" }, { children: "Ordered By" }), void 0),
                                            _jsx("th", Object.assign({ scope: "col", className: "px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider" }, { children: "Ordered Date" }), void 0)] }, void 0) }, void 0),
                                _jsx("tbody", Object.assign({ className: "bg-white divide-y divide-gray-200" }, { children: items === null || items === void 0 ? void 0 : items.map((e) => {
                                        var _a, _b;
                                        return (_jsxs("tr", Object.assign({ className: "hover:bg-gray-100 cursor-pointer", onClick: () => {
                                                onClick(e);
                                            } }, { children: [_jsx("td", Object.assign({ className: "px-6 py-4" }, { children: _jsxs("div", Object.assign({ className: "flex items-center" }, { children: [_jsx("div", Object.assign({ className: "flex-shrink-0 h-10 w-10" }, { children: _jsx("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", className: "h-10 w-10 text-gray-600" }, { children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z" }, void 0) }), void 0) }), void 0),
                                                            _jsxs("div", Object.assign({ className: "ml-4" }, { children: [_jsx("div", Object.assign({ className: "text-sm font-medium text-gray-900" }, { children: `${e === null || e === void 0 ? void 0 : e.firstName} ${e === null || e === void 0 ? void 0 : e.lastName}` }), void 0),
                                                                    _jsx("div", { className: "text-sm text-gray-500" }, void 0)] }), void 0)] }), void 0) }), void 0),
                                                _jsx("td", Object.assign({ className: "px-6 py-4 text-sm text-gray-900" }, { children: e === null || e === void 0 ? void 0 : e.phoneNo }), void 0),
                                                _jsx("td", Object.assign({ className: "px-6 py-4 text-gray-900" }, { children: `${(_a = e === null || e === void 0 ? void 0 : e.orderedBy) === null || _a === void 0 ? void 0 : _a.firstName} ${(_b = e === null || e === void 0 ? void 0 : e.orderedBy) === null || _b === void 0 ? void 0 : _b.lastName}` }), void 0),
                                                _jsx("td", Object.assign({ className: "px-6 py-4 text-sm text-gray-900" }, { children: format(parseISO(e === null || e === void 0 ? void 0 : e.createdAt), "MMM d, y") }), void 0)] }), e === null || e === void 0 ? void 0 : e.id));
                                    }) }), void 0)] }), void 0),
                        _jsx(TablePagination, { totalCount: totalCount, onNext: onNextPage, onPrevious: onPrevPage }, void 0)] }), void 0) }), void 0) }), void 0) }), void 0));
};
