import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { FileUploaderComponent } from "./FileUploaderComponent";
import classnames from "classnames";
export const PatientRegistrationDocumentsForm = ({ register, paperRecord, setPaperRecord, documents, setDocuments, onDocumentDelete, paperRecordDocument, setPaperRecordDocument, onPaperRecordDocumentDelete, }) => {
    return (_jsxs("div", Object.assign({ className: "md:grid md:grid-cols-3 md:gap-6" }, { children: [_jsx("div", Object.assign({ className: "md:col-span-1" }, { children: _jsx("div", Object.assign({ className: "px-4 sm:px-0" }, { children: _jsx("h3", Object.assign({ className: "text-lg font-medium leading-6 text-gray-900" }, { children: "Documents" }), void 0) }), void 0) }), void 0),
            _jsx("div", Object.assign({ className: "mt-5 md:mt-0 md:col-span-2" }, { children: _jsx("div", Object.assign({ className: "shadow overflow-hidden sm:rounded-md" }, { children: _jsx("div", Object.assign({ className: "px-4 py-5 bg-white sm:p-6" }, { children: _jsxs("div", Object.assign({ className: "grid grid-cols-6 gap-6" }, { children: [_jsxs("div", Object.assign({ className: "col-span-6 sm:col-span-3" }, { children: [_jsxs("label", Object.assign({ htmlFor: "paperRecord", className: "block text-sm font-medium text-gray-700" }, { children: ["Paper Record ", _jsx("span", Object.assign({ className: "text-red-600" }, { children: "*" }), void 0)] }), void 0),
                                        _jsxs("select", Object.assign({ required: true, name: "paperRecord", value: paperRecord, onChange: (evt) => setPaperRecord(evt.target.value === "Yes" ? "Yes" : "No"), className: "mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" }, { children: [_jsx("option", Object.assign({ value: "Yes" }, { children: "Yes" }), void 0),
                                                _jsx("option", Object.assign({ value: "No" }, { children: "No" }), void 0)] }), void 0)] }), void 0),
                                _jsxs("div", Object.assign({ className: classnames("col-span-6 sm:col-span-3", {
                                        invisible: paperRecord === "No",
                                    }) }, { children: [_jsx("label", Object.assign({ htmlFor: "cardNo", className: "block text-sm font-medium text-gray-700" }, { children: "Card Number" }), void 0),
                                        _jsx("input", { type: "text", name: "cardNo", required: paperRecord === "Yes", ref: register({ required: paperRecord === "Yes" }), className: "mt-1 p-1 pl-4 block w-full sm:text-md border-gray-300 border rounded-md" }, void 0)] }), void 0),
                                _jsxs("div", Object.assign({ className: "col-span-6 sm:col-span-3", hidden: paperRecord === "No" }, { children: [_jsx("label", Object.assign({ className: "block text-sm font-medium text-gray-700" }, { children: "Paper document" }), void 0),
                                        _jsx(FileUploaderComponent, { multiSelect: false, values: paperRecordDocument, accept: "document", onAdd: setPaperRecordDocument, onDelete: onPaperRecordDocumentDelete }, void 0)] }), void 0),
                                _jsxs("div", Object.assign({ className: "col-span-6 sm:col-span-3" }, { children: [_jsx("label", Object.assign({ className: "block text-sm font-medium text-gray-700" }, { children: "Other Documents" }), void 0),
                                        _jsx(FileUploaderComponent, { multiSelect: true, values: documents, onAdd: setDocuments, onDelete: onDocumentDelete }, void 0)] }), void 0)] }), void 0) }), void 0) }), void 0) }), void 0)] }), void 0));
};
